openapi: 3.0.0
info:
  title: Woowahan Food Delivery API
  version: 1.0.0
paths:
  /:
    get:
      summary: Root path to check server status
      responses:
        '200':
          description: Server is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
  /api/v1/menu/select:
    post:
      summary: 메뉴를 선택하고 임시 예약을 생성합니다.
      operationId: selectMenu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - menuId
                - quantity
                - shopId
                - memberNo
              properties:
                menuId:
                  type: string
                  description: 메뉴 ID.
                  example: menu_001
                quantity:
                  type: integer
                  description: 주문 수량 (최소 1개, 최대 99개).
                  format: int32
                  minimum: 1
                  maximum: 99
                  example: 2
                shopId:
                  type: string
                  description: 가게 ID.
                  example: shop_001
                memberNo:
                  type: string
                  description: 회원번호.
                  example: member_123
      responses:
        '200':
          description: 메뉴 예약이 성공적으로 완료되었습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 응답 상태 (SUCCESS/ERROR).
                    example: SUCCESS
                  message:
                    type: string
                    description: 응답 메시지.
                    example: 메뉴 예약이 완료되었습니다
                  timestamp:
                    type: string
                    description: 응답 시간.
                    format: date-time
                    example: '2025-08-07T12:30:00.1232'
                  data:
                    type: object
                    properties:
                      reservationId:
                        type: string
                        description: 메뉴 예약 ID (5분 유효).
                        example: RSV_A7K9M2X8
                      reservationExpiresAt:
                        type: string
                        description: 예약 만료 시간.
                        format: date-time
                        example: '2025-08-07T12:35:00.1232'
                      menuId:
                        type: string
                        description: 메뉴 ID.
                        example: menu_001
                        enum: [menu_001, menu_002, menu_003]
                      quantity:
                        type: integer
                        description: 선택 수량.
                        example: 2
        '400':
          description: 재료 부족, 잘못된 요청 등으로 인한 Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ERROR
                  message:
                    type: string
                    example: 주문하신 수량만큼 재료가 부족합니다
                  errorCode:
                    type: string
                    description: 구체적인 오류 코드
                    example: INSUFFICIENT_INGREDIENTS
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-08-07T12:30:00.123Z'

  /api/v1/order/create:
    post:
      summary: 메뉴 예약을 사용하여 최종 주문을 생성합니다.
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reservationId
                - memberNo
              properties:
                reservationId:
                  type: string
                  description: 메뉴 선택에서 받은 예약 ID.
                  example: RSV_A7K9M2X8
                memberNo:
                  type: string
                  description: 회원번호.
                  example: member_123
      responses:
        '200':
          description: 주문이 성공적으로 생성되었습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 응답 상태 (SUCCESS/ERROR).
                    example: SUCCESS
                  message:
                    type: string
                    description: 응답 메시지.
                    example: 주문이 성공적으로 생성되었습니다
                  timestamp:
                    type: string
                    description: 응답 시간.
                    format: date-time
                    example: '2025-08-07T12:30:00.1232'
                  data:
                    type: object
                    properties:
                      orderNo:
                        type: string
                        description: 8자리 영숫자 주문번호.
                        example: R7X9K2M8
                      orderStatus:
                        type: string
                        description: 주문 상태 (INITIALIZING).
                        example: INITIALIZING
                      reservationId:
                        type: string
                        description: 사용된 예약 ID.
                        example: RSV_A7K9M2X8
                      createdAt:
                        type: string
                        description: 주문 생성 시간.
                        format: date-time
                        example: '2025-08-07T12:30:00.1232'
                      memberInfo:
                        type: object
                        properties:
                          memberNo:
                            type: string
                            description: 회원번호.
                            example: member_123
        '400':
          description: 예약 만료, 유효하지 않은 예약 또는 재료 소진으로 인한 Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    description: 구체적인 오류 코드
                    example: RESERVATION_EXPIRED
                  message:
                    type: string
                    description: 오류를 설명하는 메시지
                    example: 예약 만료 (5분 초과)